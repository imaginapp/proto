// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: imagin/external/message/v1/account.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// The type of the dag
public enum Imagin_External_Message_V1_IsFollowing: SwiftProtobuf.Enum, Swift.CaseIterable {
  public typealias RawValue = Int
  case unspecified // = 0
  case `true` // = 1
  case `false` // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .true
    case 2: self = .false
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .true: return 1
    case .false: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Imagin_External_Message_V1_IsFollowing] = [
    .unspecified,
    .true,
    .false,
  ]

}

public struct Imagin_External_Message_V1_Account: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  public var profile: Imagin_External_Message_V1_Profile {
    get {return _storage._profile ?? Imagin_External_Message_V1_Profile()}
    set {_uniqueStorage()._profile = newValue}
  }
  /// Returns true if `profile` has been explicitly set.
  public var hasProfile: Bool {return _storage._profile != nil}
  /// Clears the value of `profile`. Subsequent reads from it will return its default value.
  public mutating func clearProfile() {_uniqueStorage()._profile = nil}

  public var postIds: [String] {
    get {return _storage._postIds}
    set {_uniqueStorage()._postIds = newValue}
  }

  public var isSelf: Bool {
    get {return _storage._isSelf}
    set {_uniqueStorage()._isSelf = newValue}
  }

  public var isFollowing: Imagin_External_Message_V1_IsFollowing {
    get {return _storage._isFollowing}
    set {_uniqueStorage()._isFollowing = newValue}
  }

  public var heartsEnabled: Bool {
    get {return _storage._heartsEnabled}
    set {_uniqueStorage()._heartsEnabled = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "imagin.external.message.v1"

extension Imagin_External_Message_V1_IsFollowing: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "IS_FOLLOWING_UNSPECIFIED"),
    1: .same(proto: "IS_FOLLOWING_TRUE"),
    2: .same(proto: "IS_FOLLOWING_FALSE"),
  ]
}

extension Imagin_External_Message_V1_Account: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Account"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "profile"),
    3: .standard(proto: "post_ids"),
    4: .standard(proto: "is_self"),
    5: .standard(proto: "is_following"),
    6: .standard(proto: "hearts_enabled"),
  ]

  fileprivate class _StorageClass {
    var _id: String = String()
    var _profile: Imagin_External_Message_V1_Profile? = nil
    var _postIds: [String] = []
    var _isSelf: Bool = false
    var _isFollowing: Imagin_External_Message_V1_IsFollowing = .unspecified
    var _heartsEnabled: Bool = false

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _profile = source._profile
      _postIds = source._postIds
      _isSelf = source._isSelf
      _isFollowing = source._isFollowing
      _heartsEnabled = source._heartsEnabled
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._id) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._profile) }()
        case 3: try { try decoder.decodeRepeatedStringField(value: &_storage._postIds) }()
        case 4: try { try decoder.decodeSingularBoolField(value: &_storage._isSelf) }()
        case 5: try { try decoder.decodeSingularEnumField(value: &_storage._isFollowing) }()
        case 6: try { try decoder.decodeSingularBoolField(value: &_storage._heartsEnabled) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      try { if let v = _storage._profile {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      if !_storage._postIds.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._postIds, fieldNumber: 3)
      }
      if _storage._isSelf != false {
        try visitor.visitSingularBoolField(value: _storage._isSelf, fieldNumber: 4)
      }
      if _storage._isFollowing != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._isFollowing, fieldNumber: 5)
      }
      if _storage._heartsEnabled != false {
        try visitor.visitSingularBoolField(value: _storage._heartsEnabled, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Imagin_External_Message_V1_Account, rhs: Imagin_External_Message_V1_Account) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._profile != rhs_storage._profile {return false}
        if _storage._postIds != rhs_storage._postIds {return false}
        if _storage._isSelf != rhs_storage._isSelf {return false}
        if _storage._isFollowing != rhs_storage._isFollowing {return false}
        if _storage._heartsEnabled != rhs_storage._heartsEnabled {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
